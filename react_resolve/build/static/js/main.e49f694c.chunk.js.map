{"version":3,"sources":["logo.svg","components/StudentHome.js","components/ChangePassword.js","components/UpdateStudentProfile.js","components/StudentProfile.js","components/PostComplaint.js","components/ComplaintStatus.js","components/StudentPortal.js","components/StaffHome.js","components/UpdateStaffProfile.js","components/StaffProfile.js","components/ResolveComplaints.js","components/ResolveIndividualComplaint.js","components/StaffPortal.js","components/SignUp.js","components/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StudentHome","URL","props","react_default","a","createElement","className","name","ChangePassword","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newPass","confNewPass","errorMsg","passChangeHandler","bind","assertThisInitialized","newPasswordChangeHandler","confNewPasswordChangeHandler","event","setState","target","value","preventDefault","trim","url","fetch","method","headers","Content-Type","body","JSON","stringify","category","password","token","sessionStorage","getItem","res","json","data","status","alert","message","_context","t0","noValidate","type","onChange","required","onClick","React","Component","UpdateStudentProfile","email","roll","dob","department","college","address","phone","rollChangeHandler","dobChangeHandler","departmentChangeHandler","collegeChangeHandler","addressChangeHandler","phoneChangeHandler","updateProfileHandler","user","_context2","disabled","StudentProfile","components_UpdateStudentProfile","components_ChangePassword","PostComplaint","subCategory","subCategoryChangeHandler","messageChangeHandler","messageClearHandler","postComplaintHandler","PendingComplaint","dateCreated","ResolvedComplaint","dateResolved","feedback","complaints","pending","resolved","forEach","complaint","push","key","_id","resolveMessage","StudentPortal","console","log","react_router_dom","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","signOutHandler","react_router","path","components_ComplaintStatus","components_PostComplaint","components_StudentProfile","components_StudentHome","StaffHome","UpdateStaffProfile","staffId","staffIdChangeHandler","StaffProfile","components_UpdateStaffProfile","ResolveIndividualComplaint","clearButtonHandler","resolveButtonHandler","resolveHandler","ResolveComplaints","allComplaints","sortedComplaints","searchButtonClickHandler","showAllHandler","ResolveComplaintsHandler","_this2","filter","url1","res1","data1","url2","res2","data2","pendingComplaints","_this3","map","components_ResolveIndividualComplaint","StaffPortal","components_ResolveComplaints","components_StaffProfile","components_StaffHome","SignUpForm","pass","confPass","signUpHandler","nameChangeHandler","emailChangeHandler","categoryChangeHandler","confPassChangeHandler","toLowerCase","setItem","doSignUp","SignInForm","signInHandler","passwordChangeHandler","doSignIn","App","isLoggedIn","e","removeItem","studentPortal","components_StudentPortal","staffPortal","components_StaffPortal","home","SignIn","SignUp","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"yFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kdC8BzBC,IC3BXC,ED2BWD,EA3Bf,SAAqBE,GACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACWJ,EAAMK,KADjB,KAGAJ,EAAAC,EAAAC,cAAA,qDACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,+FAAsFF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,mCAAL,MACtFF,EAAAC,EAAAC,cAAA,sDAA6CF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,mCAAL,MAC7CF,EAAAC,EAAAC,cAAA,yCAAgCF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,gDAAL,MAChCF,EAAAC,EAAAC,cAAA,2CAAkCF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,gDAAL,qBChB9CJ,EAAM,mCCJNA,ED2GWO,cAlGX,SAAAA,EAAYN,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMV,KACDc,MAAQ,CACTC,QAAS,GACTC,YAAa,GACbC,SAAU,IAEdV,EAAKW,kBAAoBX,EAAKW,kBAAkBC,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACzBA,EAAKc,yBAA2Bd,EAAKc,yBAAyBF,KAA9BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChCA,EAAKe,6BAA+Bf,EAAKe,6BAA6BH,KAAlCX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KATrBA,wFAYMgB,GACrBb,KAAKc,SAAS,CACVT,QAASQ,EAAME,OAAOC,6DAIDH,GACzBb,KAAKc,SAAS,CACVR,YAAaO,EAAME,OAAOC,0FAIVH,oFAEpBA,EAAMI,iBACFZ,EAAUL,KAAKI,MAAMC,QAAQa,OAC7BZ,EAAcN,KAAKI,MAAME,YAAYY,OACrCb,kBACAL,KAAKc,SAAS,CACVP,SAAU,8CAGTD,mBACLN,KAAKc,SAAS,CACVP,SAAU,oDAGVF,IAAUC,mBACdN,KAAKc,SAAS,CACVP,SAAU,wEAIdP,KAAKc,SAAS,CACVP,SAAU,eAGJY,EAAM9B,EAAM,wCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBC,SAAU3B,KAAKV,MAAMqC,SACrBC,SAAU5B,KAAKI,MAAMC,QACrBwB,MAAOC,eAAeC,QAAQ,kCANhCC,mBASaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGtBD,MAAM,mCACNpC,KAAKc,SAAS,CACVT,QAAS,GACTC,YAAa,wDAIjB8B,MAAME,EAAAC,GAAEF,wJAQhB,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,QAAM+C,YAAU,GACZjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,iBACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMC,QAASqC,SAAU1C,KAAKW,yBAA0BgC,SAAS,cAEjIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,yBACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAME,YAAaoC,SAAU1C,KAAKY,6BAA8B+B,SAAS,cAEzIpD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYM,KAAKI,MAAMG,UACpChB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,uBAAuBkD,QAAS5C,KAAKQ,mBAArE,oBA7FGqC,IAAMC,WCH/BzD,EAAM,mCA2NK0D,cAtNX,SAAAA,EAAYzD,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACflD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMV,KACDc,MAAQ,CACTT,KAAM,GACNqD,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,WAAY,GACZC,QAAS,GACTC,QAAS,GACTC,MAAO,IAGXzD,EAAK0D,kBAAoB1D,EAAK0D,kBAAkB9C,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACzBA,EAAK2D,iBAAmB3D,EAAK2D,iBAAiB/C,KAAtBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACxBA,EAAK2D,iBAAmB3D,EAAK2D,iBAAiB/C,KAAtBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACxBA,EAAK4D,wBAA0B5D,EAAK4D,wBAAwBhD,KAA7BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC/BA,EAAK6D,qBAAuB7D,EAAK6D,qBAAqBjD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK8D,qBAAuB9D,EAAK8D,qBAAqBlD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK+D,mBAAqB/D,EAAK+D,mBAAmBnD,KAAxBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAE1BA,EAAKgE,qBAAuBhE,EAAKgE,qBAAqBpD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KArBbA,iFAwBDgB,GACdb,KAAKc,SAAS,CACVmC,KAAMpC,EAAME,OAAOC,iDAIVH,GACbb,KAAKc,SAAS,CACVoC,IAAKrC,EAAME,OAAOC,wDAIFH,GACpBb,KAAKc,SAAS,CACVqC,WAAYtC,EAAME,OAAOC,qDAIZH,GACjBb,KAAKc,SAAS,CACVsC,QAASvC,EAAME,OAAOC,qDAITH,GACjBb,KAAKc,SAAS,CACVuC,QAASxC,EAAME,OAAOC,mDAIXH,GACfb,KAAKc,SAAS,CACVwC,MAAOzC,EAAME,OAAOC,kMAONc,eAAeC,QAAQ,wDAE1BK,MAAM,oEAGPjB,EAAM9B,EAAM,mCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBC,SAAU,UACVE,MAAOC,eAAeC,QAAQ,iCALhCC,mBASaA,EAAIC,eACJ,OADbC,UACEC,QACJC,MAAMF,EAAKG,SACXD,MAAM,8DAGAzC,EAAOuC,EAAK4B,KAAKnE,KACjBqD,EAAQd,EAAK4B,KAAKd,MAClBC,EAAOf,EAAK4B,KAAKb,KACjBC,EAAMhB,EAAK4B,KAAKZ,IAChBC,EAAajB,EAAK4B,KAAKX,WACvBC,EAAUlB,EAAK4B,KAAKV,QACpBC,EAAUnB,EAAK4B,KAAKT,QACpBC,EAAQpB,EAAK4B,KAAKR,MAExBtD,KAAKc,SAAS,CACVnB,KAAMA,EACNqD,MAAOA,EACPC,KAAMA,EACNC,IAAKA,EACLC,WAAYA,EACZC,QAASA,EACTC,QAASA,EACTC,MAAOA,+DAKnBlB,MAAM,6PAIavB,4FAEvBA,EAAMI,iBACFgC,EAAOjD,KAAKI,MAAM6C,KAAK/B,OACvBgC,EAAMlD,KAAKI,MAAM8C,IAAIhC,OACrBiC,EAAanD,KAAKI,MAAM+C,WAAWjC,OACnCkC,EAAUpD,KAAKI,MAAMgD,QAAQlC,OAC7BmC,EAAUrD,KAAKI,MAAMiD,QAAQnC,OAC7BoC,EAAQtD,KAAKI,MAAMkD,MAAMpC,OAEzB+B,mBACAb,MAAM,6CAEDc,mBACLd,MAAM,yCAEDe,mBACLf,MAAM,gDAEDgB,mBACLhB,MAAM,6CAEDiB,mBACLjB,MAAM,6CAEDkB,mBACLlB,MAAM,yDAIIjB,EAAM9B,EAAM,uCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBuB,KAAMA,EACNC,IAAKA,EACLC,WAAYA,EACZC,QAASA,EACTC,QAASA,EACTC,MAAOA,EACP3B,SAAU,UACVE,MAAOC,eAAeC,QAAQ,kCAXhCC,mBAcaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGtBD,MAAM,qFAGNA,MAAM2B,EAAAxB,GAAEF,wJAQhB,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,QAAM+C,YAAU,GACZjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,SACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMT,KAAMqE,UAAU,EAAMrB,SAAS,cAEjGpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,UACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM4C,MAAOgB,UAAU,EAAMrB,SAAS,cAElGpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM6C,KAAMP,SAAU1C,KAAKuD,kBAAmBZ,SAAS,cAEnHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,kBACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM8C,IAAKR,SAAU1C,KAAKwD,iBAAkBb,SAAS,cAEjHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,eACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM+C,WAAYT,SAAU1C,KAAKyD,wBAAyBd,SAAS,cAE/HpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMgD,QAASV,SAAU1C,KAAK0D,qBAAsBf,SAAS,cAEzHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMiD,QAASX,SAAU1C,KAAK2D,qBAAsBhB,SAAS,cAEzHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,iBACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMkD,MAAOZ,SAAU1C,KAAK4D,mBAAoBjB,SAAS,cAGrHpD,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,uBAAuBkD,QAAS5C,KAAK6D,sBAArE,oBAjNShB,IAAMC,WCgB1BmB,ICvBX5E,EDuBW4E,EApBf,SAAwB3E,GACpB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,oDAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyE,EAAD,OAEJ3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0E,EAAD,CAAgBxC,SAAS,uBCX7CtC,EAAM,mCCJNA,EDsJW+E,cA3IX,SAAAA,EAAY9E,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACfvE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMV,KACDc,MAAQ,CACT+C,WAAY,MACZkB,YAAa,YACbjB,QAAS,YACTf,QAAS,IAGbxC,EAAK4D,wBAA0B5D,EAAK4D,wBAAwBhD,KAA7BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC/BA,EAAKyE,yBAA2BzE,EAAKyE,yBAAyB7D,KAA9BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChCA,EAAK6D,qBAAuB7D,EAAK6D,qBAAqBjD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK0E,qBAAuB1E,EAAK0E,qBAAqB9D,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK2E,oBAAsB3E,EAAK2E,oBAAoB/D,KAAzBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAE3BA,EAAK4E,qBAAuB5E,EAAK4E,qBAAqBhE,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAfbA,uFAmBKgB,GACpBb,KAAKc,SAAS,CACVqC,WAAYtC,EAAME,OAAOC,yDAIRH,GACrBb,KAAKc,SAAS,CACVuD,YAAaxD,EAAME,OAAOC,qDAIbH,GACjBb,KAAKc,SAAS,CACVsC,QAASvC,EAAME,OAAOC,qDAITH,GACjBb,KAAKc,SAAS,CACVuB,QAASxB,EAAME,OAAOC,sDAK1BhB,KAAKc,SAAS,CACVuB,QAAS,2KAKPA,EAAUrC,KAAKI,MAAMiC,QAAQnB,gDAExBkB,MAAM,6DAIHjB,EAAM9B,EAAM,wCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjB/B,KAAMK,KAAKV,MAAMK,KACjBqD,MAAOhD,KAAKV,MAAM0D,MAClBC,KAAMjD,KAAKV,MAAM2D,KACjBE,WAAYnD,KAAKI,MAAM+C,WACvBkB,YAAarE,KAAKI,MAAMiE,YACxBjB,QAASpD,KAAKI,MAAMgD,QACpBf,QAASA,EACTR,MAAOC,eAAeC,QAAQ,iCAXhCC,mBAcaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGtBD,MAAMF,EAAKG,SACXrC,KAAKc,SAAS,CACVqC,WAAY,MACZkB,YAAa,YACbjB,QAAS,YACTf,QAAS,uDAIbD,MAAME,EAAAC,GAAEF,sJAMhB,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAEPH,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,eACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAM+C,WAAYT,SAAU1C,KAAKyD,yBAC1ElE,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAd,OACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,QAAd,QACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAd,OACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,MAAd,MACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,SAAd,WAGRzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,iBACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMiE,YAAa3B,SAAU1C,KAAKsE,0BAC3E/E,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,WAAd,WACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,eAAd,eACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,uBAAd,yBAGRzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMgD,QAASV,SAAU1C,KAAK0D,sBACvEnE,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,cAAd,cACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,cAAd,cACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,eAAd,iBAGRzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,sBACAH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMiC,QAASK,SAAU1C,KAAKuE,wBAEjFhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAKwE,qBAAlD,UACNjF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAKyE,sBAAlD,kBAvIF5B,IAAMC,iBCClC,SAAS4B,EAAiBpF,GACtB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAMqF,aACpCpF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAA8BH,EAAM6D,YACvC5D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCAAgCH,EAAM+E,aACzC9E,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAM8D,SACpC7D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAM+C,WAMpD,SAASuC,EAAkBtF,GACvB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAMqF,aACpCpF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAA8BH,EAAM6D,YACvC5D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCAAgCH,EAAM+E,aACzC9E,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAM8D,SACpC7D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAM+C,SACpC9C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BH,EAAMuF,cACrCtF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,4BAA4BH,EAAMwF,YA5BjDzF,EAAM,mCCUNA,EDuHW+E,cA7FX,SAAAA,EAAY9E,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IACfvE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMV,KACDc,MAAQ,CACT2E,WAAY,IAHDlF,wMAQDiC,eAAeC,QAAQ,wDAE1BK,MAAM,6EAIHjB,EAAM9B,EAAM,wCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBG,MAAOC,eAAeC,QAAQ,iCAJhCC,mBAOaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGtBrC,KAAKc,SAAS,CACViE,WAAY7C,EAAK6C,+DAIrB3C,MAAME,EAAAC,GAAEF,sJAQhB,IAAI2C,EAAU,GACVC,EAAW,GA6Bf,OA3BAjF,KAAKI,MAAM2E,WAAWG,QAAQ,SAACC,GACxBA,EAAUF,SACTA,EAASG,KAAK7F,EAAAC,EAAAC,cAACmF,EAAD,CACVS,IAAKF,EAAUG,IACfnC,WAAYgC,EAAUhC,WACtBkB,YAAac,EAAUd,YACvBjB,QAAS+B,EAAU/B,QACnBf,QAAS8C,EAAU9C,QACnByC,SAAUK,EAAUI,eACpBZ,YAAaQ,EAAUR,YACvBE,aAAcM,EAAUN,gBAI5BG,EAAQI,KAAK7F,EAAAC,EAAAC,cAACiF,EAAD,CACTW,IAAKF,EAAUG,IACfnC,WAAYgC,EAAUhC,WACtBkB,YAAac,EAAUd,YACvBjB,QAAS+B,EAAU/B,QACnBf,QAAS8C,EAAU9C,QACnByC,SAAUK,EAAUI,eACpBZ,YAAaQ,EAAUR,YACvBE,aAAcM,EAAUN,kBAMhCtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,iEACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACVsF,IAGTzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACVuF,aApFDpC,IAAMC,WCrB9BzD,EAAM,mCA6GKmG,cAxGX,SAAAA,EAAYlG,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,IACjB3F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0F,GAAArF,KAAAH,KAAMV,KACDc,MAAQ,CACXT,KAAM,GACNqD,MAAO,GACPC,KAAM,IALSpD,iNAWDiC,eAAeC,QAAQ,wDAE5BK,MAAM,qEAITjB,EAAM9B,EAAM,mCACA+B,MAAMD,EAAK,CAC3BE,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,UACVE,MAAOC,eAAeC,QAAQ,iCAL5BC,mBASaA,EAAIC,kBACJ,OADbC,UACEC,iDACCC,MAAMF,EAAKG,kBAKlBrC,KAAKc,SAAS,CACZnB,KAAMuC,EAAK4B,KAAKnE,KAChBqD,MAAOd,EAAK4B,KAAKd,MACjBC,KAAMf,EAAK4B,KAAKb,wEAKpBwC,QAAQC,IAARpD,EAAAC,sBACOH,MAAM,2MAKb,OAEE7C,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,OAAKmG,IAAKC,IAAMnG,UAAU,cAAcoG,IAAI,SAC5CvG,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0C+C,KAAK,SAASsD,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBACvM5G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B0G,GAAG,uBAC3C7G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,KAAT,SAEF9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,YAAT,YAEF9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,kBAAT,mBAEF9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,oBAAT,sBAGJ9G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAKV,MAAMgH,gBAAxD,eAOR/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACAhH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,oBACRjH,EAAAC,EAAAC,cAACgH,EAAD,CAAiB9G,KAAMK,KAAKI,MAAMT,KAAMqD,MAAOhD,KAAKI,MAAM4C,SAE5DzD,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,kBACVjH,EAAAC,EAAAC,cAACiH,EAAD,CAAe/G,KAAMK,KAAKI,MAAMT,KAAMqD,MAAOhD,KAAKI,MAAM4C,MAAOC,KAAMjD,KAAKI,MAAM6C,KAAMtB,SAAS,aAEjGpC,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,YACVjH,EAAAC,EAAAC,cAACkH,EAAD,CAAgBhH,KAAMK,KAAKI,MAAMT,KAAMqD,MAAOhD,KAAKI,MAAM4C,MAAOrB,SAAS,aAE3EpC,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,KACVjH,EAAAC,EAAAC,cAACmH,EAAD,CAAajH,KAAMK,KAAKI,MAAMT,KAAMgC,SAAS,uBAhGjCkB,IAAMC,WCMnB+D,IC3BXxH,ED2BWwH,EA3Bf,SAAmBvH,GACf,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACWJ,EAAMK,KADjB,KAGAJ,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,+FAAsFF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,mCAAL,MACtFF,EAAAC,EAAAC,cAAA,sDAA6CF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,mCAAL,MAC7CF,EAAAC,EAAAC,cAAA,yCAAgCF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,gDAAL,MAChCF,EAAAC,EAAAC,cAAA,2CAAkCF,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,gDAAL,SChB9CJ,EAAM,mCAuMKyH,cAlMX,SAAAA,EAAYxH,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACfjH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgH,GAAA3G,KAAAH,KAAMV,KACDc,MAAQ,CACTT,KAAM,GACNqD,MAAO,GACP+D,QAAS,GACT5D,WAAY,GACZC,QAAS,GACTC,QAAS,GACTC,MAAO,IAEXzD,EAAKmH,qBAAuBnH,EAAKmH,qBAAqBvG,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK4D,wBAA0B5D,EAAK4D,wBAAwBhD,KAA7BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC/BA,EAAK6D,qBAAuB7D,EAAK6D,qBAAqBjD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK8D,qBAAuB9D,EAAK8D,qBAAqBlD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAK+D,mBAAqB/D,EAAK+D,mBAAmBnD,KAAxBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAE1BA,EAAKgE,qBAAuBhE,EAAKgE,qBAAqBpD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAjBbA,oFAoBEgB,GACjBb,KAAKc,SAAS,CACViG,QAASlG,EAAME,OAAOC,wDAINH,GACpBb,KAAKc,SAAS,CACVqC,WAAYtC,EAAME,OAAOC,qDAIZH,GACjBb,KAAKc,SAAS,CACVsC,QAASvC,EAAME,OAAOC,qDAITH,GACjBb,KAAKc,SAAS,CACVuC,QAASxC,EAAME,OAAOC,mDAIXH,GACfb,KAAKc,SAAS,CACVwC,MAAOzC,EAAME,OAAOC,gMAONc,eAAeC,QAAQ,wDAE1BK,MAAM,oEAGPjB,EAAM9B,EAAM,mCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACjBC,SAAU,iBACVE,MAAOC,eAAeC,QAAQ,iCALhCC,mBASaA,EAAIC,eACJ,OADbC,UACEC,QACJC,MAAMF,EAAKG,SACXD,MAAM,8DAGAzC,EAAOuC,EAAK4B,KAAKnE,KACjBqD,EAAQd,EAAK4B,KAAKd,MAClB+D,EAAU7E,EAAK4B,KAAKiD,QACpB5D,EAAajB,EAAK4B,KAAKX,WACvBC,EAAUlB,EAAK4B,KAAKV,QACpBC,EAAUnB,EAAK4B,KAAKT,QACpBC,EAAQpB,EAAK4B,KAAKR,MAGxBtD,KAAKc,SAAS,CACVnB,KAAMA,EACNqD,MAAOA,EACP+D,QAASA,EACT5D,WAAYA,EACZC,QAASA,EACTC,QAASA,EACTC,MAAOA,+DAKnBlB,MAAM,6PAIavB,0FAEvBA,EAAMI,iBACF8F,EAAU/G,KAAKI,MAAM2G,QAAQ7F,OAC7BiC,EAAanD,KAAKI,MAAM+C,WAAWjC,OACnCkC,EAAUpD,KAAKI,MAAMgD,QAAQlC,OAC7BmC,EAAUrD,KAAKI,MAAMiD,QAAQnC,OAC7BoC,EAAQtD,KAAKI,MAAMkD,MAAMpC,OAEzB6F,mBACA3E,MAAM,8CAEDe,mBACLf,MAAM,gDAEDgB,mBACLhB,MAAM,6CAEDiB,mBACLjB,MAAM,6CAEDkB,mBACLlB,MAAM,yDAIIjB,EAAM9B,EAAM,uCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBqF,QAASA,EACT5D,WAAYA,EACZC,QAASA,EACTC,QAASA,EACTC,MAAOA,EACP3B,SAAU,iBACVE,MAAOC,eAAeC,QAAQ,kCAVhCC,mBAaaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGtBD,MAAM,qFAGNA,MAAM2B,EAAAxB,GAAEF,wJAQhB,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,QAAM+C,YAAU,GACZjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,SACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMT,KAAMqE,UAAU,EAAMrB,SAAS,cAEjGpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,UACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM4C,MAAOgB,UAAU,EAAMrB,SAAS,cAElGpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,aACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM2G,QAASrE,SAAU1C,KAAKgH,qBAAsBrE,SAAS,cAEzHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,eACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAM+C,WAAYT,SAAU1C,KAAKyD,wBAAyBd,SAAS,cAE/HpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMgD,QAASV,SAAU1C,KAAK0D,qBAAsBf,SAAS,cAEzHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMiD,QAASX,SAAU1C,KAAK2D,qBAAsBhB,SAAS,cAEzHpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,iBACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAesB,MAAOhB,KAAKI,MAAMkD,MAAOZ,SAAU1C,KAAK4D,mBAAoBjB,SAAS,cAGrHpD,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,uBAAuBkD,QAAS5C,KAAK6D,sBAArE,oBA7LOhB,IAAMC,WCiBxBmE,ICtBX5H,EDsBW4H,EArBf,SAAsB3H,GAElB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAd,oDAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACyH,EAAD,OAEJ3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0E,EAAD,CAAgBxC,SAAS,wBE0ClCwF,qBAzDX,SAAAA,EAAY7H,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACftH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,KAAMV,KACDc,MAAM,CACPiC,QAAS,IAGbxC,EAAKuH,mBAAqBvH,EAAKuH,mBAAmB3G,KAAxBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC1BA,EAAK0E,qBAAuB1E,EAAK0E,qBAAqB9D,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC5BA,EAAKwH,qBAAuBxH,EAAKwH,qBAAqB5G,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KARbA,oFAWEgB,GACjBb,KAAKc,SAAS,CACVuB,QAASxB,EAAME,OAAOC,mDAIXH,GACfb,KAAKc,SAAS,CACVuB,QAAS,oDAKb,IAAMA,EAAUrC,KAAKI,MAAMiC,QAAQnB,OACnC,IAAImB,EACA,OAAOD,MAAM,kCAEjBpC,KAAKV,MAAMgI,eAAetH,KAAKV,MAAM8G,GAAI/D,oCAIzC,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BO,KAAKV,MAAMqF,aACzCpF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,8BAA8BO,KAAKV,MAAM6D,YAC5C5D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCAAgCO,KAAKV,MAAM+E,aAC9C9E,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BO,KAAKV,MAAM8D,SACzC7D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BO,KAAKV,MAAM+C,SACzC9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAiBH,EAAAC,EAAAC,cAAA,mCAClCF,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMiC,QAASK,SAAU1C,KAAKuE,wBAEjFhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAKoH,oBAAlD,UACN7H,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAKqH,sBAAlD,uBAjDOxE,IAAMC,YDO3CzD,EAAM,mCEONA,EFwOWkI,cA1OX,SAAAA,EAAYjI,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuH,IACf1H,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyH,GAAApH,KAAAH,KAAMV,KACDc,MAAQ,CACToH,cAAe,GACfC,iBAAkB,GAClBtE,WAAY,kBACZkB,YAAa,qBACbjB,QAAS,gBAGbvD,EAAK4D,wBAA0B5D,EAAK4D,wBAAwBhD,KAA7BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC/BA,EAAKyE,yBAA2BzE,EAAKyE,yBAAyB7D,KAA9BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChCA,EAAK6D,qBAAuB7D,EAAK6D,qBAAqBjD,KAA1BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAE5BA,EAAK6H,yBAA2B7H,EAAK6H,yBAAyBjH,KAA9BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChCA,EAAK8H,eAAiB9H,EAAK8H,eAAelH,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAEtBA,EAAK+H,yBAA2B/H,EAAK+H,yBAAyBnH,KAA9BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAjBjBA,uFAoBKgB,GACpBb,KAAKc,SAAS,CACVqC,WAAYtC,EAAME,OAAOC,yDAIRH,GACrBb,KAAKc,SAAS,CACVuD,YAAaxD,EAAME,OAAOC,qDAIbH,GACjBb,KAAKc,SAAS,CACVsC,QAASvC,EAAME,OAAOC,2DAIH,IAAA6G,EAAA7H,KACjByH,EAAmBzH,KAAKI,MAAMoH,cAAcM,OAAO,SAAC3C,GACtD,QAA6B,oBAA1B0C,EAAKzH,MAAM+C,YAAoC0E,EAAKzH,MAAM+C,aAAegC,EAAUhC,YACpD,uBAA3B0E,EAAKzH,MAAMiE,aAAwCwD,EAAKzH,MAAMiE,cAAgBc,EAAUd,aAC7D,iBAAvBwD,EAAKzH,MAAMgD,SAA8ByE,EAAKzH,MAAMgD,UAAY+B,EAAU/B,WAOzFpD,KAAKc,SAAS,CACV2G,iBAAkBA,6CAKtBzH,KAAKc,SAAS,CACVqC,WAAY,kBACZkB,YAAa,qBACbjB,QAAS,eACTqE,iBAAkBzH,KAAKI,MAAMoH,yGAKNpB,EAAI/D,sFAC3B+D,2CACOhE,MAAM,oCAEHN,eAAeC,QAAQ,wDAE1BK,MAAM,6EAIH2F,EAAO1I,EAAM,4CACA+B,MAAM2G,EAAM,CAC3B1G,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjB0E,GAAIA,EACJb,eAAgBlD,EAChBR,MAAOC,eAAeC,QAAQ,kCANhCiG,mBAScA,EAAK/F,kBACJ,OADfgG,UACI9F,iDACCC,MAAM6F,EAAM5F,yBAGvBD,MAAM6F,EAAM5F,SAKN6F,EAAO7I,EAAM,gDACA+B,MAAM8G,EAAM,CAC3B7G,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBG,MAAOC,eAAeC,QAAQ,kCAJhCoG,mBAOcA,EAAKlG,kBACJ,OADfmG,UACIjG,iDACCC,MAAMgG,EAAM/F,kBAGvBrC,KAAKc,SAAS,CACV0G,cAAeY,EAAMC,kBACrBZ,iBAAkBW,EAAMC,sEAK5BjG,MAAME,EAAAC,GAAEF,yRAOFP,eAAeC,QAAQ,wDAE1BK,MAAM,6EAIHjB,EAAM9B,EAAM,+CACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBG,MAAOC,eAAeC,QAAQ,iCAJhCC,mBAOaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGtBrC,KAAKc,SAAS,CACV0G,cAAetF,EAAKmG,kBACpBZ,iBAAkBvF,EAAKmG,sEAI3BjG,MAAM2B,EAAAxB,GAAEF,sJAMX,IAAAiG,EAAAtI,KAECgF,EAAUhF,KAAKI,MAAMqH,iBAAiBc,IAAI,SAACpD,EAAWE,GACxD,OAAQ9F,EAAAC,EAAAC,cAAC+I,EAAD,CACJnD,IAAKA,EACLe,GAAIjB,EAAUG,IACdnC,WAAYgC,EAAUhC,WACtBkB,YAAac,EAAUd,YACvBjB,QAAS+B,EAAU/B,QACnBf,QAAS8C,EAAU9C,QACnByC,SAAUK,EAAUI,eACpBZ,YAAaQ,EAAUR,YACvBE,aAAcM,EAAUN,aACxByC,eAAgBgB,EAAKV,6BAI7B,OACIrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,eACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAM+C,WAAYT,SAAU1C,KAAKyD,yBAC1ElE,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,mBAAd,mBACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAd,OACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,QAAd,QACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,OAAd,OACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,MAAd,MACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,SAAd,YAIZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,iBACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMiE,YAAa3B,SAAU1C,KAAKsE,0BAC3E/E,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,sBAAd,sBACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,WAAd,WACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,eAAd,eACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,uBAAd,0BAIZzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,YACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMgD,QAASV,SAAU1C,KAAK0D,sBACvEnE,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,gBAAd,gBACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,aAAd,aACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,cAAd,cACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,cAAd,cACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,eAAd,mBAKhBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAK0H,0BAAlD,WAEJnI,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAK2H,gBAAlD,eAIZpI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,4DACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACVsF,YAlOOnC,IAAMC,WEOlCzD,EAAM,mCCjBNA,EDqHWoJ,cA/FX,SAAAA,EAAYnJ,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IACjB5I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2I,GAAAtI,KAAAH,KAAMV,KACDc,MAAQ,CACXT,KAAM,GACNqD,MAAO,IAJQnD,iNAUDiC,eAAeC,QAAQ,wDAE5BK,MAAM,qEAITjB,EAAM9B,EAAM,mCACA+B,MAAMD,EAAK,CAC3BE,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,iBACVE,MAAOC,eAAeC,QAAQ,iCAL5BC,mBASaA,EAAIC,kBACJ,OADbC,UACEC,iDACCC,MAAMF,EAAKG,kBAKlBrC,KAAKc,SAAS,CACZnB,KAAMuC,EAAK4B,KAAKnE,KAChBqD,MAAOd,EAAK4B,KAAKd,2FAKdZ,MAAM,2MAKb,OAEE7C,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,OAAKmG,IAAKC,IAAMnG,UAAU,cAAcoG,IAAI,SAC5CvG,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0C+C,KAAK,SAASsD,cAAY,WAAWC,cAAY,uBAAuBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBACvM5G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2B0G,GAAG,uBAC3C7G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mCACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,KAAT,SAEF9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,YAAT,YAEF9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMU,GAAG,eAAT,gBAGJ9G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBkD,QAAS5C,KAAKV,MAAMgH,gBAAxD,eAOR/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACEhH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,eACVjH,EAAAC,EAAAC,cAACiJ,EAAD,CAAmB/I,KAAMK,KAAKI,MAAMT,KAAMqD,MAAOhD,KAAKI,MAAM4C,MAAQrB,SAAS,oBAE/EpC,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,YACVjH,EAAAC,EAAAC,cAACkJ,EAAD,CAAchJ,KAAMK,KAAKI,MAAMT,KAAMqD,MAAOhD,KAAKI,MAAM4C,MAAQrB,SAAS,oBAE1EpC,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAOC,KAAK,KACVjH,EAAAC,EAAAC,cAACmJ,EAAD,CAAWjJ,KAAMK,KAAKI,MAAMT,KAAMgC,SAAS,8BAvFjCkB,IAAMC,iBChB5BzD,EAAM,mCCJNA,EDiKWwJ,cAxJX,SAAAA,EAAYvJ,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6I,IACfhJ,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+I,GAAA1I,KAAAH,KAAMV,KACDc,MAAQ,CACTT,KAAM,GACNqD,MAAO,GACPrB,SAAU,UACVmH,KAAM,GACNC,SAAU,GACVxI,SAAU,IAEdV,EAAKmJ,cAAgBnJ,EAAKmJ,cAAcvI,KAAnBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACrBA,EAAKoJ,kBAAoBpJ,EAAKoJ,kBAAkBxI,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACzBA,EAAKqJ,mBAAqBrJ,EAAKqJ,mBAAmBzI,KAAxBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC1BA,EAAKsJ,sBAAwBtJ,EAAKsJ,sBAAsB1I,KAA3BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC7BA,EAAKW,kBAAoBX,EAAKW,kBAAkBC,KAAvBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACzBA,EAAKuJ,sBAAwBvJ,EAAKuJ,sBAAsB3I,KAA3BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAfdA,iFAkBAgB,GACfb,KAAKc,SAAS,CACVnB,KAAMkB,EAAME,OAAOC,mDAIPH,GAChBb,KAAKc,SAAS,CACVkC,MAAOnC,EAAME,OAAOC,sDAILH,GACnBb,KAAKc,SAAS,CACVa,SAAUd,EAAME,OAAOC,kDAIZH,GACfb,KAAKc,SAAS,CACVgI,KAAMjI,EAAME,OAAOC,sDAIJH,GACnBb,KAAKc,SAAS,CACViI,SAAUlI,EAAME,OAAOC,sFAIXH,0FAEhBA,EAAMI,iBACFtB,EAAOK,KAAKI,MAAMT,KAAKuB,OAAOmI,cAC9BrG,EAAQhD,KAAKI,MAAM4C,MAAM9B,OACzB4H,EAAO9I,KAAKI,MAAM0I,KAAK5H,OACvB6H,EAAW/I,KAAKI,MAAM2I,SAAS7H,OAE/BvB,GACAK,KAAKc,SAAS,CACVP,SAAU,gBAGdyC,mBACAhD,KAAKc,SAAS,CACVP,SAAU,4CAGTuI,mBACL9I,KAAKc,SAAS,CACVP,SAAU,+CAGTwI,mBACL/I,KAAKc,SAAS,CACVP,SAAU,oDAGVuI,IAAOC,mBACX/I,KAAKc,SAAS,CACVP,SAAU,kEAIdP,KAAKc,SAAS,CACVP,SAAU,eAGJY,EAAM9B,EAAM,qCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRG,KAAMC,KAAKC,UAAU,CACjB/B,KAAMA,EACNqD,MAAOhD,KAAKI,MAAM4C,MAClBpB,SAAU5B,KAAKI,MAAM0I,KACrBnH,SAAU3B,KAAKI,MAAMuB,WAEzBL,QAAS,CAAEC,eAAgB,qCARzBS,mBAUaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGhBR,EAAQK,EAAKL,MACnBC,eAAewH,QAAQ,cAAezH,GAEtC7B,KAAKV,MAAMiK,SAASvJ,KAAKI,MAAMuB,6DAG/BS,MAAKE,EAAAC,mJAUb,OACIhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,SACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,OAAO/C,UAAU,eAAegD,SAAU1C,KAAKiJ,kBAAmB7C,GAAG,iBAErF7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,UACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,QAAQ/C,UAAU,eAAegD,SAAU1C,KAAKkJ,mBAAoB9C,GAAG,kBAEvF7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,aACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMuB,SAAUe,SAAU1C,KAAKmJ,uBACxE5J,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,WAAd,WACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,kBAAd,oBAGRzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,aACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,eAAegD,SAAU1C,KAAKQ,kBAAmB4F,GAAG,qBAEzF7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,qBACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,eAAegD,SAAU1C,KAAKoJ,sBAAuBhD,GAAG,6BAE7F7G,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYM,KAAKI,MAAMG,UACpChB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,uBAAuBkD,QAAS5C,KAAKgJ,eAArE,qBAnJDnG,IAAMC,WCH3BzD,EAAM,mCAgHKmK,cA3GX,SAAAA,EAAYlK,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAwJ,IACf3J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0J,GAAArJ,KAAAH,KAAMV,KACDc,MAAQ,CACT4C,MAAO,GACPpB,SAAU,GACVD,SAAU,UACVpB,SAAU,IAEdV,EAAK4J,cAAgB5J,EAAK4J,cAAchJ,KAAnBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACrBA,EAAKqJ,mBAAqBrJ,EAAKqJ,mBAAmBzI,KAAxBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC1BA,EAAK6J,sBAAwB7J,EAAK6J,sBAAsBjJ,KAA3BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAC7BA,EAAKsJ,sBAAwBtJ,EAAKsJ,sBAAsB1I,KAA3BX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAXdA,qFAcIgB,GACnBb,KAAKc,SAAS,CACVa,SAAUd,EAAME,OAAOC,mDAIZH,GACfb,KAAKc,SAAS,CACVkC,MAAOnC,EAAME,OAAOC,sDAINH,GAClBb,KAAKc,SAAS,CACVc,SAAUf,EAAME,OAAOC,sFAIXH,sFAEhBA,EAAMI,iBACF+B,EAAQhD,KAAKI,MAAM4C,MAAM9B,OACzBU,EAAW5B,KAAKI,MAAMwB,SAASV,OAC/B8B,kBACAhD,KAAKc,SAAS,CACVP,SAAU,2CAGTqB,mBACL5B,KAAKc,SAAS,CACVP,SAAU,mDAIdP,KAAKc,SAAS,CACVP,SAAU,eAGJY,EAAM9B,EAAM,qCACA+B,MAAMD,EAAK,CACzBE,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACjBsB,MAAOhD,KAAKI,MAAM4C,MAClBpB,SAAU5B,KAAKI,MAAMwB,SACrBD,SAAU3B,KAAKI,MAAMuB,4BANvBK,mBASaA,EAAIC,kBACH,OADdC,UACGC,iDACEC,MAAMF,EAAKG,kBAGhBR,EAAQK,EAAKL,MACnBC,eAAewH,QAAQ,cAAezH,GAEtC7B,KAAKV,MAAMqK,SAAS3J,KAAKI,MAAMuB,6DAG/BS,MAAME,EAAAC,GAAEF,wJAQhB,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,QAAM+C,YAAU,GACZjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,aACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesB,MAAOhB,KAAKI,MAAMuB,SAAUe,SAAU1C,KAAKmJ,uBACxE5J,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,WAAd,WACAzB,EAAAC,EAAAC,cAAA,UAAQuB,MAAM,kBAAd,oBAGRzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,UACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,QAAQ/C,UAAU,eAAegD,SAAU1C,KAAKkJ,mBAAoB9C,GAAG,eAAezD,SAAS,cAE/GpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAjB,aACAH,EAAAC,EAAAC,cAAA,SAAOgD,KAAK,WAAW/C,UAAU,eAAegD,SAAU1C,KAAK0J,sBAAuBtD,GAAG,kBAAkBzD,SAAS,cAExHpD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYM,KAAKI,MAAMG,UACpChB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,UAAQgD,KAAK,SAAS/C,UAAU,uBAAuBkD,QAAS5C,KAAKyJ,eAArE,qBAtGD5G,IAAMC,WCgFhB8G,cAhFb,SAAAA,EAAYtK,GAAO,IAAAO,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4J,IACjB/J,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8J,GAAAzJ,KAAAH,KAAMV,KACDc,MAAQ,CACXyJ,YAAY,EACZlI,SAAU,IAEZ9B,EAAKyG,eAAiBzG,EAAKyG,eAAe7F,KAApBX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KACtBA,EAAK8J,SAAW9J,EAAK8J,SAASlJ,KAAdX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KAChBA,EAAK0J,SAAW1J,EAAK0J,SAAS9I,KAAdX,OAAAY,EAAA,EAAAZ,QAAAY,EAAA,EAAAZ,CAAAD,KARCA,8EAWJiK,GACbhI,eAAeiI,WAAW,eAC1B/J,KAAKc,SAAS,CACZ+I,YAAY,EACZlI,SAAU,sCAILA,GACP3B,KAAKc,SAAS,CACZ+I,YAAY,EACZlI,SAAUA,qCAILA,GACP3B,KAAKc,SAAS,CACZ+I,YAAY,EACZlI,SAAUA,qCAKZ,IAAMqI,EAAgBzK,EAAAC,EAAAC,cAACwK,EAAD,CAAe3D,eAAgBtG,KAAKsG,iBACpD4D,EAAc3K,EAAAC,EAAAC,cAAC0K,EAAD,CAAa7D,eAAgBtG,KAAKsG,iBAEhD8D,EACJ7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKmG,IAAKC,IAAMnG,UAAU,WAAWoG,IAAI,UAE3CvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,0BACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,iDAENF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAC4K,EAAD,CAAYV,SAAU3J,KAAK2J,YAE7BpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAC6K,EAAD,CAAYf,SAAUvJ,KAAKuJ,YAE7BhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAGnBH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,yBAAgBF,EAAAC,EAAAC,cAAA,8BAChBF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,0CAKN,OACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXM,KAAKI,MAAMyJ,WAA6C,YAAxB7J,KAAKI,MAAMuB,SAAyBqI,EAAgBE,EAA5DE,UA3EhBvH,IAAMC,WCGJyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACPtL,EAAAC,EAAAC,cAACF,EAAAC,EAAMsL,WAAP,KACEvL,EAAAC,EAAAC,cAACsL,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLhG,QAAQgG,MAAMA,EAAMpJ","file":"static/js/main.e49f694c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport '../css/Home.css';\r\n\r\nfunction StudentHome(props){\r\n    return (\r\n        <div className=\"container home-div\">\r\n            <h2 className=\"home-greeting-msg\">\r\n                Hello {props.name}!\r\n            </h2>\r\n            <h4>Welcome to student's portal of Resolve!</h4>\r\n            <br></br>\r\n            <br></br>\r\n            <h5>Resolve is a prototype of a Student's Grievance Support System.</h5>\r\n            <br></br>\r\n            <br></br>\r\n            <div className=\"resolve-features-div\">\r\n                <h5>It supports following features: </h5>\r\n                <p>* Sign Up</p>\r\n                <p>* Sign In</p>\r\n                <p>* Own profile viewing and updating</p>\r\n                <p>* Posting complaints while choosing between several departments and sub categories <em>[<strong>Only for students</strong>]</em></p>\r\n                <p>* Viewing pending and resloved complaints <em>[<strong>Only for students</strong>]</em></p>\r\n                <p>* Viewing pending complaints <em>[<strong>Only for Administration staffs</strong>]</em></p>\r\n                <p>* Resolving pending complaints <em>[<strong>Only for Administration staffs</strong>]</em></p>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudentHome;","import React from 'react';\r\nimport '../css/ChangePassword.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass ChangePassword extends React.Component {\r\n    //props.category\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newPass: '',\r\n            confNewPass: '',\r\n            errorMsg: ''\r\n        };\r\n        this.passChangeHandler = this.passChangeHandler.bind(this);\r\n        this.newPasswordChangeHandler = this.newPasswordChangeHandler.bind(this);\r\n        this.confNewPasswordChangeHandler = this.confNewPasswordChangeHandler.bind(this);\r\n    }\r\n\r\n    newPasswordChangeHandler(event) {\r\n        this.setState({\r\n            newPass: event.target.value\r\n        });\r\n    }\r\n\r\n    confNewPasswordChangeHandler(event) {\r\n        this.setState({\r\n            confNewPass: event.target.value\r\n        });\r\n    }\r\n\r\n    async passChangeHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let newPass = this.state.newPass.trim();\r\n        let confNewPass = this.state.confNewPass.trim();\r\n        if(!newPass) {\r\n            this.setState({\r\n                errorMsg: 'New pass empty!'\r\n            });\r\n        }\r\n        else if(!confNewPass) {\r\n            this.setState({\r\n                errorMsg: 'Conf new pass empty!'\r\n            });\r\n        }\r\n        else if(newPass!==confNewPass) {\r\n            this.setState({\r\n                errorMsg: 'New pass and conf pass do not match!'\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                errorMsg: ''\r\n            });\r\n            try {\r\n                const url = URL + '/api/profile/changePassword';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        category: this.props.category,\r\n                        password: this.state.newPass,\r\n                        token: sessionStorage.getItem('assistToken') \r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                alert('Password changed successfully!!');\r\n                this.setState({\r\n                    newPass: '',\r\n                    confNewPass: ''\r\n                });\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container change-pass-div\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">New password:</label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.newPass} onChange={this.newPasswordChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Confirm new password:</label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.confNewPass} onChange={this.confNewPasswordChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <p className='errorMsg'>{this.state.errorMsg}</p>\r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.passChangeHandler}>Submit</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChangePassword;","import React from 'react';\r\nimport '../css/ChangePassword.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass UpdateStudentProfile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            roll: '',\r\n            dob: '',\r\n            department: '',\r\n            college: '',\r\n            address: '',\r\n            phone: ''\r\n        };\r\n\r\n        this.rollChangeHandler = this.rollChangeHandler.bind(this);\r\n        this.dobChangeHandler = this.dobChangeHandler.bind(this);\r\n        this.dobChangeHandler = this.dobChangeHandler.bind(this);\r\n        this.departmentChangeHandler = this.departmentChangeHandler.bind(this);\r\n        this.collegeChangeHandler = this.collegeChangeHandler.bind(this);\r\n        this.addressChangeHandler = this.addressChangeHandler.bind(this);\r\n        this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\r\n    \r\n        this.updateProfileHandler = this.updateProfileHandler.bind(this);\r\n    }\r\n\r\n    rollChangeHandler(event) {\r\n        this.setState({\r\n            roll: event.target.value\r\n        });\r\n    }\r\n\r\n    dobChangeHandler(event) {\r\n        this.setState({\r\n            dob: event.target.value\r\n        });\r\n    }\r\n    \r\n    departmentChangeHandler(event) {\r\n        this.setState({\r\n            department: event.target.value\r\n        });\r\n    }\r\n\r\n    collegeChangeHandler(event) {\r\n        this.setState({\r\n            college: event.target.value\r\n        });\r\n    }\r\n\r\n    addressChangeHandler(event) {\r\n        this.setState({\r\n            address: event.target.value\r\n        });\r\n    }\r\n\r\n    phoneChangeHandler(event) {\r\n        this.setState({\r\n            phone: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token){\r\n                return alert('Token missing! Please sign out and sign in again!');\r\n            }\r\n            else{\r\n                const url = URL + '/api/profile/getProfile'\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({\r\n                        category: 'student',\r\n                        token: sessionStorage.getItem('assistToken')\r\n                    }),\r\n                });\r\n\r\n                const data = await res.json();\r\n                if(data.status !== 200) {\r\n                    alert(data.message);\r\n                    alert('There was some error! Please sign out and sign in again.');\r\n                }\r\n                else{\r\n                    const name = data.user.name;\r\n                    const email = data.user.email;\r\n                    const roll = data.user.roll;\r\n                    const dob = data.user.dob;\r\n                    const department = data.user.department;\r\n                    const college = data.user.college;\r\n                    const address = data.user.address;\r\n                    const phone = data.user.phone;\r\n\r\n                    this.setState({\r\n                        name: name,\r\n                        email: email,\r\n                        roll: roll,\r\n                        dob: dob,\r\n                        department: department,\r\n                        college: college,\r\n                        address: address,\r\n                        phone: phone\r\n                    });\r\n                }\r\n            }\r\n        }catch(e){\r\n            alert('There was some error! Please sign out and sign in again.');\r\n        }\r\n    }\r\n\r\n    async updateProfileHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let roll = this.state.roll.trim();\r\n        let dob = this.state.dob.trim();\r\n        let department = this.state.department.trim();\r\n        let college = this.state.college.trim();\r\n        let address = this.state.address.trim();\r\n        let phone = this.state.phone.trim();\r\n\r\n        if(!roll) {\r\n            alert('Roll no empty!')\r\n        }\r\n        else if(!dob) {\r\n            alert('DOB empty!')\r\n        }\r\n        else if(!department) {\r\n            alert('Department empty!')\r\n        }\r\n        else if(!college) {\r\n            alert('College empty!')\r\n        }\r\n        else if(!address) {\r\n            alert('Address empty!');\r\n        }\r\n        else if(!phone) {\r\n            alert('Phone empty!');\r\n        }\r\n        else{\r\n            try {\r\n                const url = URL + '/api/profile/updateProfile';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        roll: roll,\r\n                        dob: dob,\r\n                        department: department,\r\n                        college: college,\r\n                        address: address,\r\n                        phone: phone,\r\n                        category: 'student',\r\n                        token: sessionStorage.getItem('assistToken') \r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                alert('Profile updated successfully!!');\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container change-pass-div\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} disabled={true} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.email} disabled={true} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Roll no:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.roll} onChange={this.rollChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Date of birth:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.dob} onChange={this.dobChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Department:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.department} onChange={this.departmentChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">College:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.college} onChange={this.collegeChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Address:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.address} onChange={this.addressChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Phone Number:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.phone} onChange={this.phoneChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    \r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.updateProfileHandler}>Update</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateStudentProfile;","import React from 'react';\r\nimport '../css/Profile.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UpdateStudentProfile from './UpdateStudentProfile';\r\n\r\n\r\nfunction StudentProfile(props){\r\n    return (\r\n        <div className=\"container profile-main-div\">\r\n            <h3 className=\"profile-greeting-msg\">\r\n                You can view and edit your profile details here.\r\n            </h3>\r\n            <div className=\"container profile-edit-div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <UpdateStudentProfile /> \r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <ChangePassword category='student'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StudentProfile;","import React from 'react';\r\nimport '../css/PostComplaint.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass PostComplaint extends React.Component {\r\n    //props.name\r\n    //props.email\r\n    //props.roll\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            department: 'CSE',\r\n            subCategory: 'Admission',\r\n            college: 'BIT Mesra',\r\n            message: ''\r\n        }\r\n\r\n        this.departmentChangeHandler = this.departmentChangeHandler.bind(this);\r\n        this.subCategoryChangeHandler = this.subCategoryChangeHandler.bind(this);\r\n        this.collegeChangeHandler = this.collegeChangeHandler.bind(this);\r\n        this.messageChangeHandler = this.messageChangeHandler.bind(this);\r\n        this.messageClearHandler = this.messageClearHandler.bind(this);\r\n\r\n        this.postComplaintHandler = this.postComplaintHandler.bind(this);\r\n\r\n    }\r\n\r\n    departmentChangeHandler(event) {\r\n        this.setState({\r\n            department: event.target.value\r\n        });\r\n    }\r\n\r\n    subCategoryChangeHandler(event) {\r\n        this.setState({\r\n            subCategory: event.target.value\r\n        });\r\n    }\r\n\r\n    collegeChangeHandler(event) {\r\n        this.setState({\r\n            college: event.target.value\r\n        });\r\n    }\r\n\r\n    messageChangeHandler(event) {\r\n        this.setState({\r\n            message: event.target.value\r\n        });\r\n    }\r\n\r\n    messageClearHandler() {\r\n        this.setState({\r\n            message: ''\r\n        });\r\n    }\r\n\r\n    async postComplaintHandler() {\r\n        const message = this.state.message.trim();\r\n        if(!message) {\r\n            return alert('Complaint message cant be empty!!');\r\n        }\r\n        else{\r\n            try {\r\n                const url = URL + '/api/complaint/postComplaint';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        name: this.props.name,\r\n                        email: this.props.email,\r\n                        roll: this.props.roll,\r\n                        department: this.state.department,\r\n                        subCategory: this.state.subCategory,\r\n                        college: this.state.college,\r\n                        message: message,\r\n                        token: sessionStorage.getItem('assistToken')\r\n                    })\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                alert(data.message);\r\n                this.setState({\r\n                    department: 'ECE',\r\n                    subCategory: 'Admission',\r\n                    college: 'BIT Mesra',\r\n                    message: ''\r\n                });\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container post-complaint-div\">\r\n\r\n                    <h3>You can post complaints here.</h3>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Department:</label>\r\n                        <select className=\"form-control\" value={this.state.department} onChange={this.departmentChangeHandler}>\r\n                            <option value=\"CSE\">CSE</option>\r\n                            <option value=\"MECH\">MECH</option>\r\n                            <option value=\"ECE\">ECE</option>\r\n                            <option value=\"IT\">IT</option>\r\n                            <option value=\"CIVIL\">CIVIL</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Sub Category:</label>\r\n                        <select className=\"form-control\" value={this.state.subCategory} onChange={this.subCategoryChangeHandler}>\r\n                            <option value=\"Admission\">Admission</option>\r\n                            <option value=\"Finance\">Finance</option>\r\n                            <option value=\"Examination\">Examination</option>\r\n                            <option value=\"Timetable\">Timetable</option>\r\n                            <option value=\"Paper Re-evaluation\">Paper Re-evaluation</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">College:</label>\r\n                        <select className=\"form-control\" value={this.state.college} onChange={this.collegeChangeHandler}>\r\n                            <option value=\"BIT Mesra\">BIT Mesra</option>\r\n                            <option value=\"BIT Patna\">BIT Patna</option>\r\n                            <option value=\"BIT Lalpur\">BIT Lalpur</option>\r\n                            <option value=\"BIT Sindri\">BIT Sindri</option>\r\n                            <option value=\"BIT Deoghar\">BIT Deoghar</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Complaint Message:</label>\r\n                        <textarea className=\"form-control\" value={this.state.message} onChange={this.messageChangeHandler}></textarea>\r\n                    </div>\r\n                    <div className=\"form-group post-complaints-buttons\">\r\n                        <span><button className=\"btn btn-warning\" onClick={this.messageClearHandler}>Clear</button></span>\r\n                        <span><button className=\"btn btn-success\" onClick={this.postComplaintHandler}>Send</button></span>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PostComplaint;","import React from 'react';\r\nimport '../css/ComplaintStatus.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\n\r\nfunction PendingComplaint(props) {\r\n    return (\r\n        <div className=\"indiv-complaint-wrapper\">\r\n            <div className=\"indiv-complaint\">\r\n                <p><strong>Created: </strong>{props.dateCreated}</p>\r\n                <p><strong>Department: </strong>{props.department}</p>\r\n                <p><strong>Sub Category: </strong>{props.subCategory}</p>\r\n                <p><strong>College: </strong>{props.college}</p>\r\n                <p><strong>Message: </strong>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction ResolvedComplaint(props) {\r\n    return (\r\n        <div className=\"indiv-complaint-wrapper\">\r\n            <div className=\"indiv-complaint\">\r\n                <p><strong>Created: </strong>{props.dateCreated}</p>\r\n                <p><strong>Department: </strong>{props.department}</p>\r\n                <p><strong>Sub Category: </strong>{props.subCategory}</p>\r\n                <p><strong>College: </strong>{props.college}</p>\r\n                <p><strong>Message: </strong>{props.message}</p>\r\n                <p><strong>Resolved: </strong>{props.dateResolved}</p>\r\n                <p><strong>Feedback: </strong>{props.feedback}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nclass PostComplaint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            complaints: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const token = sessionStorage.getItem('assistToken');\r\n        if(!token) {\r\n            return alert('Token missing! Please sign out and sign in again.');\r\n        }\r\n        else{\r\n            try {\r\n                const url = URL + '/api/complaint/getComplaints';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        token: sessionStorage.getItem('assistToken')\r\n                    })\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                this.setState({\r\n                    complaints: data.complaints\r\n                });\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let pending = [];\r\n        let resolved = [];\r\n\r\n        this.state.complaints.forEach((complaint)=>{\r\n            if(complaint.resolved){\r\n                resolved.push(<ResolvedComplaint \r\n                    key={complaint._id} \r\n                    department={complaint.department}\r\n                    subCategory={complaint.subCategory}\r\n                    college={complaint.college}\r\n                    message={complaint.message}\r\n                    feedback={complaint.resolveMessage}\r\n                    dateCreated={complaint.dateCreated}\r\n                    dateResolved={complaint.dateResolved}\r\n                />);\r\n            }\r\n            else{\r\n                pending.push(<PendingComplaint \r\n                    key={complaint._id} \r\n                    department={complaint.department}\r\n                    subCategory={complaint.subCategory}\r\n                    college={complaint.college}\r\n                    message={complaint.message}\r\n                    feedback={complaint.resolveMessage}\r\n                    dateCreated={complaint.dateCreated}\r\n                    dateResolved={complaint.dateResolved}\r\n                />);\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className=\"container complaints-div\">\r\n                <h3>You can see the status of all your complaints here.</h3>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <h5>Pending complaints: </h5>\r\n                        <div className=\"pending-complaints-div\">\r\n                            {pending}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h5>Resolved complaints: </h5>\r\n                        <div className=\"resolved-complaints-div\">\r\n                            {resolved}\r\n                        </div>   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PostComplaint;","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../css/Portal.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\n\r\nimport StudentHome from '../components/StudentHome';\r\nimport StudentProfile from '../components/StudentProfile';\r\nimport PostComplaint from '../components/PostComplaint';\r\nimport ComplaintStatus from '../components/ComplaintStatus';\r\n\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass StudentPortal extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n        email: '',\r\n        roll: ''\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      try{\r\n        const token = sessionStorage.getItem('assistToken');\r\n        if(!token) {\r\n          return alert('Token missing! Please sign out and sign in again!!');\r\n          //do sign out\r\n        }\r\n\r\n        const url = URL + '/api/profile/getProfile';\r\n        const res = await fetch(url, {  \r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            category: 'student',\r\n            token: sessionStorage.getItem('assistToken')\r\n          })\r\n        });\r\n\r\n        const data = await res.json();\r\n        if(data.status !== 200) {\r\n          return alert(data.message);\r\n          //do sign out\r\n        }\r\n\r\n        else {\r\n          this.setState({\r\n            name: data.user.name,\r\n            email: data.user.email,\r\n            roll: data.user.roll\r\n          });\r\n        }\r\n\r\n      }catch(e){\r\n        console.log(e);\r\n        return alert('There was some error! Please sign out and sign in again!!');\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          \r\n          <Router>\r\n            <div className=\"container\">\r\n              <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <span className=\"navbar-brand nav-logo\">\r\n                  <img src={logo} className=\"Portal-logo\" alt=\"logo\" />\r\n                  <h2>RESOLVE</h2>\r\n                </span>\r\n                <button className=\"navbar-toggler portal-navbar-toggle-btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerPortal\" aria-controls=\"navbarTogglerPortal\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerPortal\">\r\n                  <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/profile\">Profile</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/postComplaint\">Post Complaint</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/complaintStatus\">Complaint Status</Link>\r\n                    </li>\r\n                  </ul>\r\n                  <span className=\"form-inline my-2 my-lg-0\">\r\n                    <button className=\"btn btn-warning\" onClick={this.props.signOutHandler}>Sign Out</button>\r\n                  </span>\r\n                </div>\r\n              </nav>\r\n        \r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n            <Route path=\"/complaintStatus\">\r\n                <ComplaintStatus name={this.state.name} email={this.state.email}/>\r\n              </Route>\r\n              <Route path=\"/postComplaint\">\r\n                <PostComplaint name={this.state.name} email={this.state.email} roll={this.state.roll} category='student'/>\r\n              </Route>\r\n              <Route path=\"/profile\">\r\n                <StudentProfile name={this.state.name} email={this.state.email} category='student'/>\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <StudentHome name={this.state.name} category='student'/>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentPortal;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/Home.css';\r\n\r\nfunction StaffHome(props){\r\n    return (\r\n        <div className=\"container home-div\">\r\n            <h2 className=\"home-greeting-msg\">\r\n                Hello {props.name}!\r\n            </h2>\r\n            <h4>Welcome to Administration portal of Resolve!</h4>\r\n            <br></br>\r\n            <br></br>\r\n            <h5>Resolve is a prototype of a Student's Grievance Support System.</h5>\r\n            <br></br>\r\n            <br></br>\r\n            <div className=\"resolve-features-div\">\r\n                <h5>It supports following features: </h5>\r\n                <p>* Sign Up</p>\r\n                <p>* Sign In</p>\r\n                <p>* Own profile viewing and updating</p>\r\n                <p>* Posting complaints while choosing between several departments and sub categories <em>[<strong>Only for students</strong>]</em></p>\r\n                <p>* Viewing pending and resloved complaints <em>[<strong>Only for students</strong>]</em></p>\r\n                <p>* Viewing pending complaints <em>[<strong>Only for Administration staffs</strong>]</em></p>\r\n                <p>* Resolving pending complaints <em>[<strong>Only for Administration staffs</strong>]</em></p>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StaffHome;","import React from 'react';\r\nimport '../css/ChangePassword.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass UpdateStaffProfile extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            staffId: '',\r\n            department: '',\r\n            college: '',\r\n            address: '',\r\n            phone: ''\r\n        };\r\n        this.staffIdChangeHandler = this.staffIdChangeHandler.bind(this);\r\n        this.departmentChangeHandler = this.departmentChangeHandler.bind(this);\r\n        this.collegeChangeHandler = this.collegeChangeHandler.bind(this);\r\n        this.addressChangeHandler = this.addressChangeHandler.bind(this);\r\n        this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\r\n\r\n        this.updateProfileHandler = this.updateProfileHandler.bind(this);\r\n    }\r\n\r\n    staffIdChangeHandler(event) {\r\n        this.setState({\r\n            staffId: event.target.value\r\n        });\r\n    }\r\n\r\n    departmentChangeHandler(event) {\r\n        this.setState({\r\n            department: event.target.value\r\n        });\r\n    }\r\n\r\n    collegeChangeHandler(event) {\r\n        this.setState({\r\n            college: event.target.value\r\n        });\r\n    }\r\n\r\n    addressChangeHandler(event) {\r\n        this.setState({\r\n            address: event.target.value\r\n        });\r\n    }\r\n\r\n    phoneChangeHandler(event) {\r\n        this.setState({\r\n            phone: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const token = sessionStorage.getItem('assistToken');\r\n            if(!token){\r\n                return alert('Token missing! Please sign out and sign in again!');\r\n            }\r\n            else{\r\n                const url = URL + '/api/profile/getProfile'\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({\r\n                        category: 'administration',\r\n                        token: sessionStorage.getItem('assistToken')\r\n                    }),\r\n                });\r\n\r\n                const data = await res.json();\r\n                if(data.status !== 200) {\r\n                    alert(data.message);\r\n                    alert('There was some error! Please sign out and sign in again.');\r\n                }\r\n                else{\r\n                    const name = data.user.name;\r\n                    const email = data.user.email;\r\n                    const staffId = data.user.staffId;\r\n                    const department = data.user.department;\r\n                    const college = data.user.college;\r\n                    const address = data.user.address;\r\n                    const phone = data.user.phone;\r\n                    \r\n\r\n                    this.setState({\r\n                        name: name,\r\n                        email: email,\r\n                        staffId: staffId,\r\n                        department: department,\r\n                        college: college,\r\n                        address: address,\r\n                        phone: phone\r\n                    });\r\n                }\r\n            }\r\n        }catch(e){\r\n            alert('There was some error! Please sign out and sign in again.');\r\n        }\r\n    }\r\n\r\n    async updateProfileHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let staffId = this.state.staffId.trim();\r\n        let department = this.state.department.trim();\r\n        let college = this.state.college.trim();\r\n        let address = this.state.address.trim();\r\n        let phone = this.state.phone.trim();\r\n\r\n        if(!staffId) {\r\n            alert('Staff Id empty!')\r\n        }\r\n        else if(!department) {\r\n            alert('Department empty!');\r\n        }\r\n        else if(!college) {\r\n            alert('College empty!');\r\n        }\r\n        else if(!address) {\r\n            alert('Address empty!');\r\n        }\r\n        else if(!phone) {\r\n            alert('Phone empty!');\r\n        }\r\n        else{\r\n            try {\r\n                const url = URL + '/api/profile/updateProfile';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        staffId: staffId,\r\n                        department: department,\r\n                        college: college,\r\n                        address: address,\r\n                        phone: phone,\r\n                        category: 'administration',\r\n                        token: sessionStorage.getItem('assistToken') \r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                alert('Profile updated successfully!!');\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container change-pass-div\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.name} disabled={true} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.email} disabled={true} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Staff Id:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.staffId} onChange={this.staffIdChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Department:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.department} onChange={this.departmentChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">College:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.college} onChange={this.collegeChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Address:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.address} onChange={this.addressChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Phone Number:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.phone} onChange={this.phoneChangeHandler} required=\"required\"></input>\r\n                    </div>\r\n                    \r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.updateProfileHandler}>Update</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateStaffProfile;","import React from 'react';\r\nimport '../css/Profile.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UpdateStaffProfile from './UpdateStaffProfile';\r\n\r\n\r\nfunction StaffProfile(props){\r\n    //props.category\r\n    return (\r\n        <div className=\"container profile-main-div\">\r\n            <h3 className=\"profile-greeting-msg\">\r\n                You can view and edit your profile details here.\r\n            </h3>\r\n            <div className=\"container profile-edit-div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <UpdateStaffProfile /> \r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <ChangePassword category='administration'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StaffProfile;","import React from 'react';\r\n\r\nimport '../css/ResolveComplaints.css';\r\nimport ResolveIndividualComplaint from './ResolveIndividualComplaint';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\n\r\nclass ResolveComplaints extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allComplaints: [],\r\n            sortedComplaints: [],\r\n            department: 'All departments',\r\n            subCategory: 'All sub categories',\r\n            college: 'All colleges' \r\n        }\r\n\r\n        this.departmentChangeHandler = this.departmentChangeHandler.bind(this);\r\n        this.subCategoryChangeHandler = this.subCategoryChangeHandler.bind(this);\r\n        this.collegeChangeHandler = this.collegeChangeHandler.bind(this);\r\n\r\n        this.searchButtonClickHandler = this.searchButtonClickHandler.bind(this);\r\n        this.showAllHandler = this.showAllHandler.bind(this);\r\n\r\n        this.ResolveComplaintsHandler = this.ResolveComplaintsHandler.bind(this);\r\n    }\r\n\r\n    departmentChangeHandler(event) {\r\n        this.setState({\r\n            department: event.target.value\r\n        });\r\n    }\r\n\r\n    subCategoryChangeHandler(event) {\r\n        this.setState({\r\n            subCategory: event.target.value\r\n        });\r\n    }\r\n\r\n    collegeChangeHandler(event) {\r\n        this.setState({\r\n            college: event.target.value\r\n        });\r\n    }\r\n    \r\n    searchButtonClickHandler() {\r\n        const sortedComplaints = this.state.allComplaints.filter((complaint)=>{\r\n            if(this.state.department === 'All departments' || this.state.department === complaint.department){\r\n                if(this.state.subCategory === 'All sub categories' || this.state.subCategory === complaint.subCategory) {\r\n                    if(this.state.college === 'All colleges' || this.state.college === complaint.college) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n        this.setState({\r\n            sortedComplaints: sortedComplaints\r\n        });\r\n    }\r\n\r\n    showAllHandler() {\r\n        this.setState({\r\n            department: 'All departments',\r\n            subCategory: 'All sub categories',\r\n            college: 'All colleges',\r\n            sortedComplaints: this.state.allComplaints\r\n        }); \r\n    }\r\n\r\n\r\n    async ResolveComplaintsHandler(id, message){\r\n        if(!id){\r\n            return alert('Complaint id missing!');\r\n        }\r\n        const token = sessionStorage.getItem('assistToken');\r\n        if(!token) {\r\n            return alert('Token missing! Please sign out and sign in again.');\r\n        }\r\n        else{\r\n            try {\r\n                const url1 = URL + '/api/complaint/resolveComplaint';\r\n                const res1 = await fetch(url1, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        id: id, \r\n                        resolveMessage: message,\r\n                        token: sessionStorage.getItem('assistToken')\r\n                    })\r\n                });\r\n                const data1 = await res1.json();\r\n                if (data1.status !== 200) {\r\n                    return alert(data1.message);\r\n                }\r\n                \r\n                alert(data1.message);\r\n\r\n\r\n                //complaint already resolved..now fetch fresh pending ones\r\n\r\n                const url2 = URL + '/api/complaint/getPendingComplaints';\r\n                const res2 = await fetch(url2, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        token: sessionStorage.getItem('assistToken')\r\n                    })\r\n                });\r\n                const data2 = await res2.json();\r\n                if (data2.status !== 200) {\r\n                    return alert(data2.message);\r\n                }\r\n                \r\n                this.setState({\r\n                    allComplaints: data2.pendingComplaints,\r\n                    sortedComplaints: data2.pendingComplaints\r\n                });\r\n\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        const token = sessionStorage.getItem('assistToken');\r\n        if(!token) {\r\n            return alert('Token missing! Please sign out and sign in again.');\r\n        }\r\n        else{\r\n            try {\r\n                const url = URL + '/api/complaint/getPendingComplaints';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        token: sessionStorage.getItem('assistToken')\r\n                    })\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                this.setState({\r\n                    allComplaints: data.pendingComplaints,\r\n                    sortedComplaints: data.pendingComplaints\r\n                });\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const pending = this.state.sortedComplaints.map((complaint, key)=>{\r\n            return (<ResolveIndividualComplaint \r\n                key={key} \r\n                id={complaint._id}\r\n                department={complaint.department}\r\n                subCategory={complaint.subCategory}\r\n                college={complaint.college}\r\n                message={complaint.message}\r\n                feedback={complaint.resolveMessage}\r\n                dateCreated={complaint.dateCreated}\r\n                dateResolved={complaint.dateResolved}\r\n                resolveHandler={this.ResolveComplaintsHandler}\r\n            />);\r\n        })\r\n\r\n        return (\r\n            <div className=\"container resolve-complaints-div\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"col-form-label\">Department:</label>\r\n                            <select className=\"form-control\" value={this.state.department} onChange={this.departmentChangeHandler}>\r\n                                <option value=\"All departments\">All departments</option>\r\n                                <option value=\"CSE\">CSE</option>\r\n                                <option value=\"MECH\">MECH</option>\r\n                                <option value=\"ECE\">ECE</option>\r\n                                <option value=\"IT\">IT</option>\r\n                                <option value=\"CIVIL\">CIVIL</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"col-form-label\">Sub Category:</label>\r\n                            <select className=\"form-control\" value={this.state.subCategory} onChange={this.subCategoryChangeHandler}>\r\n                                <option value=\"All sub categories\">All sub categories</option>\r\n                                <option value=\"Admission\">Admission</option>\r\n                                <option value=\"Finance\">Finance</option>\r\n                                <option value=\"Examination\">Examination</option>\r\n                                <option value=\"Timetable\">Timetable</option>\r\n                                <option value=\"Paper Re-evaluation\">Paper Re-evaluation</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"col-form-label\">College:</label>\r\n                            <select className=\"form-control\" value={this.state.college} onChange={this.collegeChangeHandler}>\r\n                                <option value=\"All colleges\">All colleges</option>\r\n                                <option value=\"BIT Mesra\">BIT Mesra</option>\r\n                                <option value=\"BIT Patna\">BIT Patna</option>\r\n                                <option value=\"BIT Lalpur\">BIT Lalpur</option>\r\n                                <option value=\"BIT Sindri\">BIT Sindri</option>\r\n                                <option value=\"BIT Deoghar\">BIT Deoghar</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 resolve-complaints-buttons\">\r\n                        <span className=\"search-buttons-span\">\r\n                            <button className=\"btn btn-primary\" onClick={this.searchButtonClickHandler}>Search</button>\r\n                        </span>\r\n                        <span className=\"search-buttons-span\">\r\n                            <button className=\"btn btn-success\" onClick={this.showAllHandler}>Show All</button>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"all-complaints-div\">\r\n                    <h3 className=\"resolve-complaints-msg\">You can see and resolve all the pending complaints here.</h3>\r\n                    <div className=\"row\">\r\n                        {pending}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ResolveComplaints;","import React from 'react';\r\n\r\nclass ResolveIndividualComplaint extends React.Component {\r\n    //props.resolveHandler()\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            message: ''\r\n        }\r\n\r\n        this.clearButtonHandler = this.clearButtonHandler.bind(this);\r\n        this.messageChangeHandler = this.messageChangeHandler.bind(this);\r\n        this.resolveButtonHandler = this.resolveButtonHandler.bind(this);\r\n    }\r\n\r\n    messageChangeHandler(event){\r\n        this.setState({\r\n            message: event.target.value\r\n        });\r\n    }\r\n\r\n    clearButtonHandler(event) {\r\n        this.setState({\r\n            message: ''\r\n        });\r\n    }\r\n\r\n    resolveButtonHandler() {\r\n        const message = this.state.message.trim();\r\n        if(!message) {\r\n            return alert('Resolve message cant be empty!');\r\n        }\r\n        this.props.resolveHandler(this.props.id, message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-4\">\r\n                <div className=\"indiv-complaint-wrapper\">\r\n                    <div className=\"indiv-complaint\">\r\n                        <p><strong>Created: </strong>{this.props.dateCreated}</p>\r\n                        <p><strong>Department: </strong>{this.props.department}</p>\r\n                        <p><strong>Sub Category: </strong>{this.props.subCategory}</p>\r\n                        <p><strong>College: </strong>{this.props.college}</p>\r\n                        <p><strong>Message: </strong>{this.props.message}</p>\r\n                        <div className=\"form-group indiv-complaint-textarea\">\r\n                            <label className=\"col-form-label\"><strong>Resolve message:</strong></label>\r\n                            <textarea className=\"form-control\" value={this.state.message} onChange={this.messageChangeHandler}></textarea>\r\n                        </div>\r\n                        <div className=\"resolve-complaints-buttons\">\r\n                            <span><button className=\"btn btn-warning\" onClick={this.clearButtonHandler}>Clear</button></span>\r\n                            <span><button className=\"btn btn-success\" onClick={this.resolveButtonHandler}>Resolve</button></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ResolveIndividualComplaint;","import React from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../css/Portal.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\n\r\nimport StaffHome from '../components/StaffHome';\r\nimport StaffProfile from '../components/StaffProfile';\r\nimport ResolveComplaints from '../components/ResolveComplaints';\r\n\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass StaffPortal extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        name: '',\r\n        email: ''\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      try{\r\n        const token = sessionStorage.getItem('assistToken');\r\n        if(!token) {\r\n          return alert('Token missing! Please sign out and sign in again!!');\r\n          //do sign out\r\n        }\r\n\r\n        const url = URL + '/api/profile/getProfile';\r\n        const res = await fetch(url, {  \r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            category: 'administration',\r\n            token: sessionStorage.getItem('assistToken')\r\n          })\r\n        });\r\n\r\n        const data = await res.json();\r\n        if(data.status !== 200) {\r\n          return alert(data.message);\r\n          //do sign out\r\n        }\r\n\r\n        else {\r\n          this.setState({\r\n            name: data.user.name,\r\n            email: data.user.email\r\n          });\r\n        }\r\n\r\n      }catch(e){\r\n        return alert('There was some error! Please sign out and sign in again!!');\r\n      }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          \r\n          <Router>\r\n            <div className=\"container\">\r\n              <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <span className=\"navbar-brand nav-logo\">\r\n                  <img src={logo} className=\"Portal-logo\" alt=\"logo\" />\r\n                  <h2>RESOLVE</h2>\r\n                </span>\r\n                <button className=\"navbar-toggler portal-navbar-toggle-btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerPortal\" aria-controls=\"navbarTogglerPortal\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerPortal\">\r\n                  <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/profile\">Profile</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                      <Link to=\"/complaints\">Complaints</Link>\r\n                    </li>\r\n                  </ul>\r\n                  <span className=\"form-inline my-2 my-lg-0\">\r\n                    <button className=\"btn btn-warning\" onClick={this.props.signOutHandler}>Sign Out</button>\r\n                  </span>\r\n                </div>\r\n              </nav>\r\n        \r\n            {/* A <Switch> looks through its children <Route>s and\r\n                renders the first one that matches the current URL. */}\r\n            <Switch>\r\n              <Route path=\"/complaints\">\r\n                <ResolveComplaints name={this.state.name} email={this.state.email}  category='administration'/>\r\n              </Route>\r\n              <Route path=\"/profile\">\r\n                <StaffProfile name={this.state.name} email={this.state.email}  category='administration'/>\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <StaffHome name={this.state.name} category='administration'/>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default StaffPortal;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport '../css/SignInUpForm.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass SignUpForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            category: 'student',\r\n            pass: '',\r\n            confPass: '',\r\n            errorMsg: ''\r\n        };\r\n        this.signUpHandler = this.signUpHandler.bind(this);\r\n        this.nameChangeHandler = this.nameChangeHandler.bind(this);\r\n        this.emailChangeHandler = this.emailChangeHandler.bind(this);\r\n        this.categoryChangeHandler = this.categoryChangeHandler.bind(this);\r\n        this.passChangeHandler = this.passChangeHandler.bind(this);\r\n        this.confPassChangeHandler = this.confPassChangeHandler.bind(this);\r\n    }\r\n\r\n    nameChangeHandler (event) {\r\n        this.setState({\r\n            name: event.target.value\r\n        });\r\n    }\r\n\r\n    emailChangeHandler (event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    categoryChangeHandler (event) {\r\n        this.setState({\r\n            category: event.target.value\r\n        });\r\n    }\r\n\r\n    passChangeHandler (event) {\r\n        this.setState({\r\n            pass: event.target.value\r\n        });\r\n    }\r\n\r\n    confPassChangeHandler (event) {\r\n        this.setState({\r\n            confPass: event.target.value\r\n        });\r\n    }\r\n\r\n    async signUpHandler(event){\r\n        //ckeck the sign up details and verify with database, then call signUpHandler()\r\n        event.preventDefault();\r\n        let name = this.state.name.trim().toLowerCase();\r\n        let email = this.state.email.trim();\r\n        let pass = this.state.pass.trim();\r\n        let confPass = this.state.confPass.trim();\r\n\r\n        if(!name) {\r\n            this.setState({\r\n                errorMsg: 'Name empty!'\r\n            });\r\n        }\r\n        if(!email) {\r\n            this.setState({\r\n                errorMsg: 'Email empty!'\r\n            });\r\n        }\r\n        else if(!pass) {\r\n            this.setState({\r\n                errorMsg: 'Password empty!'\r\n            });\r\n        }\r\n        else if(!confPass) {\r\n            this.setState({\r\n                errorMsg: 'Conf password empty!' \r\n            });\r\n        }\r\n        else if(pass!==confPass){\r\n            this.setState({\r\n                errorMsg: 'Pass and conf pass dont match!'\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                errorMsg: ''\r\n            });\r\n            try {\r\n                const url = URL + '/api/authenticate/signUp';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    body: JSON.stringify({ \r\n                        name: name,\r\n                        email: this.state.email,\r\n                        password: this.state.pass,\r\n                        category: this.state.category\r\n                    }),\r\n                    headers: { \"Content-Type\": \"application/json\" }\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                const token = data.token;\r\n                sessionStorage.setItem('assistToken', token);\r\n\r\n                this.props.doSignUp(this.state.category);\r\n\r\n            } catch (e) {\r\n                alert(e);\r\n            }\r\n\r\n        }\r\n  \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container signInUpDiv\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Name:</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={this.nameChangeHandler} id=\"signUp-name\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"email\" className=\"form-control\" onChange={this.emailChangeHandler} id=\"signUp-email\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Category:</label>\r\n                        <select className=\"form-control\" value={this.state.category} onChange={this.categoryChangeHandler}>\r\n                            <option value=\"student\">Student</option>\r\n                            <option value=\"administration\">Administration</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={this.passChangeHandler} id=\"signUp-password\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Confirm Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={this.confPassChangeHandler} id=\"SignUp-confirm-password\"></input>\r\n                    </div>\r\n                    <p className='errorMsg'>{this.state.errorMsg}</p>\r\n                    <span><button type=\"button\" className=\"btn btn-outline-info\" onClick={this.signUpHandler}>Sign Up</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport '../css/SignInUpForm.css';\r\n\r\nlet URL;\r\nif (process.env.NODE_ENV === 'development') {\r\n    URL = 'http://localhost:5000';\r\n} else {\r\n    URL = 'https://resolve.aryanabhi.in';\r\n}\r\n\r\nclass SignInForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            category: 'student',\r\n            errorMsg: ''\r\n        };\r\n        this.signInHandler = this.signInHandler.bind(this);\r\n        this.emailChangeHandler = this.emailChangeHandler.bind(this);\r\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n        this.categoryChangeHandler = this.categoryChangeHandler.bind(this);\r\n    }\r\n\r\n    categoryChangeHandler (event) {\r\n        this.setState({\r\n            category: event.target.value\r\n        });\r\n    }\r\n\r\n    emailChangeHandler(event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n\r\n    passwordChangeHandler(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    async signInHandler(event) {\r\n        //check sign in details and verify with database, then call doSignIn\r\n        event.preventDefault();\r\n        let email = this.state.email.trim();\r\n        let password = this.state.password.trim();\r\n        if(!email) {\r\n            this.setState({\r\n                errorMsg: 'Email empty!'\r\n            });\r\n        }\r\n        else if(!password) {\r\n            this.setState({\r\n                errorMsg: 'Password empty!'\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                errorMsg: ''\r\n            });\r\n            try {\r\n                const url = URL + '/api/authenticate/signIn';\r\n                const res = await fetch(url, {\r\n                    method: 'POST',\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({ \r\n                        email: this.state.email,\r\n                        password: this.state.password,\r\n                        category: this.state.category\r\n                    }),\r\n                });\r\n                const data = await res.json();\r\n                if (data.status !== 200) {\r\n                    return alert(data.message);\r\n                }\r\n                \r\n                const token = data.token;\r\n                sessionStorage.setItem('assistToken', token);\r\n\r\n                this.props.doSignIn(this.state.category);\r\n\r\n            } catch (e) {\r\n                alert(e.message);\r\n            }\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container signInUpDiv\">\r\n                <form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Category:</label>\r\n                        <select className=\"form-control\" value={this.state.category} onChange={this.categoryChangeHandler}>\r\n                            <option value=\"student\">Student</option>\r\n                            <option value=\"administration\">Administration</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Email:</label>\r\n                        <input type=\"email\" className=\"form-control\" onChange={this.emailChangeHandler} id=\"signIn-email\" required=\"required\"></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label className=\"col-form-label\">Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" onChange={this.passwordChangeHandler} id=\"signIn-password\" required=\"required\"></input>\r\n                    </div>\r\n                    <p className='errorMsg'>{this.state.errorMsg}</p>\r\n                    <span><button type=\"submit\" className=\"btn btn-outline-info\" onClick={this.signInHandler}>Sign In</button></span>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport StudentPortal from './components/StudentPortal';\nimport StaffPortal from './components/StaffPortal';\nimport SignUpForm from './components/SignUp';\nimport SignInForm from './components/SignIn';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      category: ''\n    };\n    this.signOutHandler = this.signOutHandler.bind(this);\n    this.doSignIn = this.doSignIn.bind(this);\n    this.doSignUp = this.doSignUp.bind(this);\n  }\n\n  signOutHandler(e) {\n    sessionStorage.removeItem('assistToken');\n    this.setState({\n      isLoggedIn: false,\n      category: ''\n    });\n  }\n\n  doSignIn(category) {\n    this.setState({\n      isLoggedIn: true,\n      category: category\n    });\n  }\n\n  doSignUp(category) {\n    this.setState({\n      isLoggedIn: true,\n      category: category\n    });\n  }\n\n  render() {\n    const studentPortal = <StudentPortal signOutHandler={this.signOutHandler}/>;\n    const staffPortal = <StaffPortal signOutHandler={this.signOutHandler}/>\n\n    const home = (\n      <div className=\"container\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"container home-desc\">\n          <h2><strong>Resolve</strong></h2>\n          <h4><em>Students Grievance Support System</em></h4>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-1\"></div>\n            <div className=\"col-md-4 signInUpContainer\">\n              <SignInForm doSignIn={this.doSignIn}></SignInForm>\n            </div>\n            <div className=\"col-md-2\">\n\n            </div>\n            <div className=\"col-md-4 signInUpContainer\">\n              <SignUpForm doSignUp={this.doSignUp}></SignUpForm>\n            </div>\n            <div className=\"col-md-1\"></div>\n          </div>\n        </div>\n        <hr></hr>\n        <div className=\"footer\">\n          <p>Designed as part of our lab assignment of Software Engineering Lab.</p>\n          <p>Designed by: <strong>Team Dextro</strong></p>\n          <p>1. Abhishek Aryan BE/10130/17</p>\n          <p>2. Rohit Hembrom BE/10131/17</p>\n          <p>3. Gaurav Singh BE/10137/17</p>\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"container-fluid home\">\n        {!this.state.isLoggedIn ? home : (this.state.category === 'student' ? studentPortal : staffPortal)}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}